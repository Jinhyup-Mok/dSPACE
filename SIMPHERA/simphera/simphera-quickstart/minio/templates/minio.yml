{{- $kind := eq .Values.global.simphera.minio.mode "persistent-volume" | ternary "StatefulSet" "Deployment" -}}
apiVersion: apps/v1
kind: {{ $kind }}
metadata:
  name: minio
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "minio") | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "simphera.selectorLabels" (list . "minio") | nindent 6 }}
  {{- if eq $kind "StatefulSet" }}
  serviceName: minio
  {{- end }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "simphera.templateLabels" (list . "minio") | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      {{- if .Values.global.simphera.serviceAccounts.minio }}
      serviceAccountName: {{ .Values.global.simphera.serviceAccounts.minio | quote }}
      {{- else }}
      {{- if .Values.global.simphera.minio.serviceAccount }}
      serviceAccountName: {{ .Values.global.simphera.minio.serviceAccount | quote }}
      {{- else }}
      serviceAccountName: simphera
      {{- end }}
      {{- end }}
      containers:
      - name: minio
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/minio:{{ .Values.global.simphera.image.tag }}"
        command: ["minio"]
        {{- if eq .Values.global.simphera.minio.mode "persistent-volume" }}
        args: ["server", "/data"]
        {{- end }}
        {{- if eq .Values.global.simphera.minio.mode "azure" }}
        args: ["gateway", "azure"]
        {{- end }}
        {{- if eq .Values.global.simphera.minio.mode "aws" }}
        args:
        - "gateway"
        - "s3"
        {{- if .Values.global.simphera.minio.s3serviceEndpoint }}
        - {{ .Values.global.simphera.minio.s3serviceEndpoint | quote }}
        {{- end }}
        {{- end }}
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        - name: minio
          containerPort: 9000
        env:
        {{- if .Values.global.simphera.minio.adminSecret }}
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.simphera.minio.adminSecret | quote }}
              key: user
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.simphera.minio.adminSecret | quote }}
              key: password
        {{- else }}
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-admin-secret
              key: user
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-admin-secret
              key: password
        {{- end }}
        {{- if eq .Values.global.simphera.minio.mode "azure" }}
        {{- if .Values.global.simphera.minio.azureStorageSecret }}
        - name: AZURE_STORAGE_ACCOUNT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.simphera.minio.azureStorageSecret | quote }}
              key: account
        - name: AZURE_STORAGE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.simphera.minio.azureStorageSecret | quote }}
              key: key
        {{- else }}
        - name: AZURE_STORAGE_ACCOUNT
          value: {{ .Values.global.simphera.minio.azureStorageAccount | quote }}
        - name: AZURE_STORAGE_KEY
          value: {{ .Values.global.simphera.minio.azureStorageKey | quote }}
        {{- end }}
        {{- end }}
        {{- if eq .Values.global.simphera.minio.mode "aws" }}
        {{- if not .Values.global.simphera.minio.enabledIrsa }}
        {{- if .Values.global.simphera.minio.s3Secret }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.simphera.minio.s3Secret | quote }}
              key: accesskeyid
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.simphera.minio.s3Secret | quote }}
              key: secretaccesskey
        {{- else }}
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.global.simphera.minio.s3AccessKeyId | quote }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Values.global.simphera.minio.s3SecretAccessKey | quote }}
        {{- end }}
        {{- end }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: minio
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          tcpSocket:
            port: minio
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        startupProbe:
          tcpSocket:
            port: minio
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 60
        volumeMounts:
        {{- if eq .Values.global.simphera.minio.mode "persistent-volume" }}
        - name: data
          mountPath: /data
        {{- end }}
      {{- with .Values.global.simphera.linuxNodes.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.simphera.linuxNodes.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
      {{- range .Values.global.simphera.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
  {{- if eq .Values.global.simphera.minio.mode "persistent-volume" }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.global.simphera.minio.storageClass | quote }}
      resources:
        requests:
          storage: {{ .Values.global.simphera.minio.storageSize }}
  {{- end }}
