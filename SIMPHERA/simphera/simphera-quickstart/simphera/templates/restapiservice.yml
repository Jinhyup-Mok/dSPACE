{{- $imagetag := default .Values.global.simphera.image.tag .Values.restapiservice.image.tag -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restapiservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "restapiservice") | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "simphera.selectorLabels" (list . "restapiservice") | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "simphera.templateLabels" (list . "restapiservice") | nindent 8 }}
    spec:
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.backendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      containers:
      - name: restapiservice
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/scbt/api:{{ $imagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.restApiContainerResources" . | nindent 8 }}
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 5060
          initialDelaySeconds: 5
          periodSeconds: 15
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 5060
          initialDelaySeconds: 10
          periodSeconds: 15
          failureThreshold: 5
        ports:
        - containerPort: 5060
        env:
        {{- include "simphera.generalEnvironmentVariables" . | nindent 8 }}
        {{- include "simphera.customRootCertificates.environmentVariables" . | nindent 8 }}
        - name: SCBT_SERVICE_ID
          value: "dSPACE.Simphera.RestApiService.{{ $imagetag }}"
        - name: ROUTE_PREFIX
          value: api
        - name: STEPBT_API_ENABLED
          value: "{{ .Values.stepbt.restapi.enabled }}"
        {{- range $key, $val := .Values.env.extraEnvVars }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        volumeMounts:
        {{- include "simphera.customRootCertificates.volumeMounts" . | nindent 8 }}
        {{- include "simphera.serviceSettings.volumeMounts" (list . "/usr/app/servicesettings.json") | nindent 8 }}
      volumes:
      {{- include "simphera.customRootCertificates.volumes" . | nindent 6 }}
      {{- include "simphera.serviceSettings.volumes" . | nindent 6 }}
---
apiVersion: v1
kind: Service
metadata:
  name: restapiservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "restapiservice") | nindent 4 }}
spec:
  ports:
  - name: restapiservice
    port: 5060
    protocol: TCP
    targetPort: 5060
  selector:
    {{- include "simphera.selectorLabels" (list . "restapiservice") | nindent 4 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: restapiservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "restapiservice") | nindent 4 }}
  annotations:
    {{- include "simphera.restApiIngressAnnotations" . | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: restapiservice
            port:
              name: restapiservice
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: restapiswagger
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "restapiswagger") | nindent 4 }}
  annotations:
    {{- include "simphera.swaggerIngressAnnotations" $ | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /api/swagger
        pathType: Prefix
        backend:
          service:
            name: restapiservice
            port:
              name: restapiservice
      - path: /api/auth
        pathType: Prefix
        backend:
          service:
            name: restapiservice
            port:
              name: restapiservice
