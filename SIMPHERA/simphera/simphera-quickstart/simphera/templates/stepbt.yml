{{- $appimagetag := default .Values.global.simphera.image.tag .Values.stepbt.app.image.tag -}}
{{- $gatewayimagetag := default .Values.global.simphera.image.tag .Values.stepbt.gateway.image.tag -}}
{{- $businesslogicimagetag := default .Values.global.simphera.image.tag .Values.stepbt.businesslogic.image.tag -}}
{{- $datamigrationimagetag := default .Values.global.simphera.image.tag .Values.stepbt.datamigrationjob.image.tag -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stepbt-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbt-app") | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "simphera.selectorLabels" (list . "stepbt-app") | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "simphera.templateLabels" (list . "stepbt-app") | nindent 8 }}
    spec:
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.frontendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      containers:
      - name: stepbt-app
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/stepbt/frontend:{{ $appimagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.frontendContainerSecurityContext" . | nindent 8 }}
        {{- include "simphera.frontendContainerResources" . | nindent 8 }}
        ports:
        - containerPort: 8080
        {{- include "simphera.frontendContainerHealthChecks" . | nindent 8 }}
        volumeMounts:
        {{- include "simphera.nginx.volumeMounts" . | nindent 8 }}
      volumes:
      {{- include "simphera.nginx.volumes" . | nindent 6 }}
---
apiVersion: v1
kind: Service
metadata:
  name: stepbt-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbt-app") | nindent 4 }}
spec:
  ports:
  - name: stepbt-app
    port: 3005
    targetPort: 8080
  selector:
    {{- include "simphera.selectorLabels" (list . "stepbt-app") | nindent 4 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stepbt-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbt-app") | nindent 4 }}
  annotations:
    {{- include "simphera.frontendIngressAnnotations" . | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /remoteentry/stepbt
        pathType: Prefix
        backend:
          service:
            name: stepbt-app
            port:
              name: stepbt-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stepbtgateway
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbtgateway") | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "simphera.selectorLabels" (list . "stepbtgateway") | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "simphera.templateLabels" (list . "stepbtgateway") | nindent 8 }}
    spec:
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.backendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      containers:
      - name: stepbtgateway
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/stepbt/apigateway:{{ $gatewayimagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.nodeGatewayContainerResources" . | nindent 8 }}
        ports:
        - containerPort: 4005
        readinessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 4005
          initialDelaySeconds: 3
          periodSeconds: 15
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 4005
          initialDelaySeconds: 5
          periodSeconds: 15
          failureThreshold: 5
        volumeMounts:
        {{- include "simphera.customRootCertificates.volumeMounts" . | nindent 8 }}
        {{- include "simphera.serviceSettings.volumeMounts" (list . "/opt/app-root/build/servicesettings.json") | nindent 8 }}
      volumes:
      {{- include "simphera.customRootCertificates.volumes" . | nindent 6 }}
      {{- include "simphera.serviceSettings.volumes" . | nindent 6 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stepbt
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbtgateway") | nindent 4 }}
  annotations:
    {{- include "simphera.apiGatewayIngressAnnotations" $ | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /gateway/stepbt
        pathType: Prefix
        backend:
          service:
            name: stepbtgateway
            port:
              name: stepbtgateway
---
apiVersion: v1
kind: Service
metadata:
  name: stepbtgateway
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbtgateway") | nindent 4 }}
spec:
  ports:
  - name: stepbtgateway
    port: 4005
    protocol: TCP
    targetPort: 4005
  selector:
    {{- include "simphera.selectorLabels" (list . "stepbtgateway") | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stepbtbusinesslogic
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbtbusinesslogic") | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "simphera.selectorLabels" (list . "stepbtbusinesslogic") | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "simphera.templateLabels" (list . "stepbtbusinesslogic") | nindent 8 }}
    spec:
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.backendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      initContainers:
      - name: stepbtbusinesslogic-init
        image: {{ .Values.global.simphera.image.registry }}/dspace/simphera/k8s-wait-for:{{ .Values.global.simphera.image.tag }}
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.initContainerResources" . | nindent 8 }}
        args:
        - "job"
        - "stepbt-migration-{{ .Release.Revision }}"
      containers:
      - name: stepbtbusinesslogic
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/stepbt/service:{{ $businesslogicimagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.dotnetBusinesslogicContainerResources" . | nindent 8 }}
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-service=Readiness", "-addr=0.0.0.0:5005"]
          initialDelaySeconds: 5
          periodSeconds: 15
          failureThreshold: 5
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-service=Liveness", "-addr=0.0.0.0:5005"]
          initialDelaySeconds: 10
          periodSeconds: 15
          failureThreshold: 5
        ports:
        - containerPort: 5005
        - containerPort: 6005
        env:
        {{- include "simphera.generalEnvironmentVariables" . | nindent 8 }}
        {{- include "simphera.storages" . | indent 8 }}
        {{- include "simphera.addStorageByName" (dict "context" .Values "storageName" .Values.stepbt.storageName ) | indent 8 }}
        {{- include "simphera.addStorageByName" (dict "context" .Values "envPrefix" "RESULT_" "storageName" .Values.stepbt.resultStorageName ) | indent 8 }}
        {{- include "simphera.databases.simphera.environmentVariables" . | nindent 8 }}
        - name: SCBT_SERVICE_ID
          value: "dSPACE.Simphera.Server.Stepbt.BusinessLogic.{{ $businesslogicimagetag }}"
        - name: ROUTE_PREFIX
          value: api/simphera/step-based-testing
        volumeMounts:
        {{- include "simphera.customRootCertificates.volumeMounts" . | nindent 8 }}
        {{- include "simphera.serviceSettings.volumeMounts" (list . "/usr/app/servicesettings.json") | nindent 8 }}
      volumes:
      {{- include "simphera.customRootCertificates.volumes" . | nindent 6 }}
      {{- include "simphera.serviceSettings.volumes" . | nindent 6 }}
---
apiVersion: v1
kind: Service
metadata:
  name: stepbtbusinesslogic
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbtbusinesslogic") | nindent 4 }}
spec:
  ports:
  - name: stepbtrestapi
    port: 6005
    protocol: TCP
    targetPort: 6005
  - name: stepbtbusinesslogic
    port: 5005
    protocol: TCP
    targetPort: 5005
  selector:
    {{- include "simphera.selectorLabels" (list . "stepbtbusinesslogic") | nindent 4 }}
---
apiVersion: batch/v1 # Migration Job
kind: Job
metadata:
  name: stepbt-migration-{{ .Release.Revision }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbt-migration") | nindent 4 }}
  annotations:
    {{- include "simphera.migrationAnnotations" $ | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        {{- include "simphera.jobTemplateLabels" (list . "stepbt-migration") | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.backendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      containers:
      - name: stepbt-migration
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/stepbt/datamigrationjob:{{ $datamigrationimagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.migrationContainerResources" . | nindent 8 }}
        {{- include "simphera.job.command" (list . "dotnet" "StepbtDataMigrationJob.dll") | nindent 8 }}
        env:
        {{- include "simphera.generalEnvironmentVariables" . | nindent 8 }}
        {{- include "simphera.databases.simphera.environmentVariables" . | nindent 8 }}
        - name: SCBT_SERVICE_ID
          value: "dSPACE.Simphera.Server.Stepbt.DataMigrationJob.{{ $datamigrationimagetag }}"
        {{- range $key, $val := .Values.env.extraEnvVars }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        volumeMounts:
        {{- include "simphera.customRootCertificates.volumeMounts" . | nindent 8 }}
      volumes:
      {{- include "simphera.customRootCertificates.volumes" . | nindent 6 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stepbtrestapi
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbtrestapi") | nindent 4 }}
  annotations:
    {{- include "simphera.restApiIngressAnnotations" . | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /api/simphera/step-based-testing
        pathType: Prefix
        backend:
          service:
            name: stepbtbusinesslogic
            port:
              name: stepbtrestapi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stepbtrestapiswagger
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "stepbtrestapiswagger") | nindent 4 }}
  annotations:
    {{- include "simphera.swaggerIngressAnnotations" $ | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /api/simphera/step-based-testing/swagger
        pathType: Prefix
        backend:
          service:
            name: stepbtbusinesslogic
            port:
              name: stepbtrestapi
