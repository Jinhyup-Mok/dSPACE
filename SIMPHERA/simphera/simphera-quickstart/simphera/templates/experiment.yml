{{- $appimagetag := default .Values.global.simphera.image.tag .Values.experiment.app.image.tag -}}
{{- $serviceimagetag := default .Values.global.simphera.image.tag .Values.experiment.service.image.tag -}}
{{- $measurementserviceimagetag := default .Values.global.simphera.image.tag .Values.experiment.measurementservice.image.tag -}}
{{- $datamigrationimagetag := default .Values.global.simphera.image.tag .Values.experiment.datamigrationjob.image.tag -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: experiment-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experiment-app") | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "simphera.selectorLabels" (list . "experiment-app") | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "simphera.templateLabels" (list . "experiment-app") | nindent 8 }}
    spec:
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.frontendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      containers:
      - name: experiment-app
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/experiment/frontend:{{ $appimagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.frontendContainerSecurityContext" . | nindent 8 }}
        {{- include "simphera.frontendContainerResources" . | nindent 8 }}
        ports:
        - containerPort: 8080
        {{- include "simphera.frontendContainerHealthChecks" . | nindent 8 }}
        volumeMounts:
        {{- include "simphera.nginx.volumeMounts" . | nindent 8 }}
      volumes:
      {{- include "simphera.nginx.volumes" . | nindent 6 }}
---
apiVersion: v1
kind: Service
metadata:
  name: experiment-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experiment-app") | nindent 4 }}
spec:
  ports:
  - name: experiment-app
    port: 3009
    targetPort: 8080
  selector:
    {{- include "simphera.selectorLabels" (list . "experiment-app") | nindent 4 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: experiment-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experiment-app") | nindent 4 }}
  annotations:
    {{- include "simphera.frontendIngressAnnotations" $ | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /remoteentry/experiment
        pathType: Prefix
        backend:
          service:
            name: experiment-app
            port:
              name: experiment-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: experimentservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experimentservice") | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "simphera.selectorLabels" (list . "experimentservice") | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "simphera.templateLabels" (list . "experimentservice") | nindent 8 }}
    spec:
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.backendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      containers:
      - name: experimentservice
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/experiment/service:{{ $serviceimagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.dotnetBusinesslogicContainerResources" . | nindent 8 }}
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-service=Readiness", "-addr=0.0.0.0:5009"]
          initialDelaySeconds: 5
          periodSeconds: 15
          failureThreshold: 5
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-service=Liveness", "-addr=0.0.0.0:5009"]
          initialDelaySeconds: 10
          periodSeconds: 15
          failureThreshold: 5
        ports:
        - containerPort: 4009
        - containerPort: 5009
        - containerPort: 6009
        env:
        {{- include "simphera.generalEnvironmentVariables" . | nindent 8 }}
        {{- include "simphera.databases.simphera.environmentVariables" . | nindent 8 }}
        {{- include "simphera.storages" . | indent 8 }}
        {{- include "simphera.addStorageByName" (dict "context" .Values "storageName" .Values.experiment.storageName ) | indent 8 }}
        {{- include "simphera.customRootCertificates.environmentVariables" . | nindent 8 }}
        - name: SCBT_SERVICE_ID
          value: "dSPACE.Simphera.Server.Experiment.Service.{{ $serviceimagetag }}"
        {{- range $key, $val := .Values.env.extraEnvVars }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        volumeMounts:
        {{- include "simphera.storages.volumemounts" . | nindent 8 }}
        {{- include "simphera.customRootCertificates.volumeMounts" . | nindent 8 }}
        {{- include "simphera.serviceSettings.volumeMounts" (list . "/usr/app/servicesettings.json") | nindent 8 }}
      volumes:
      {{- include "simphera.storages.volumes" . | nindent 6 }}
      {{- include "simphera.customRootCertificates.volumes" . | nindent 6 }}
      {{- include "simphera.serviceSettings.volumes" . | nindent 6 }}
---
apiVersion: v1
kind: Service
metadata:
  name: experimentservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experimentservice") | nindent 4 }}
spec:
  ports:
  - name: graphql
    port: 4009
    protocol: TCP
    targetPort: 4009
  - name: grpc
    port: 5009
    protocol: TCP
    targetPort: 5009
  - name: rest
    port: 6009
    protocol: TCP
    targetPort: 6009
  selector:
    {{- include "simphera.selectorLabels" (list . "experimentservice") | nindent 4 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: experimentservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experimentservice") | nindent 4 }}
  annotations:
    {{- include "simphera.apiGatewayIngressAnnotations" $ | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /gateway/experiment
        pathType: Prefix
        backend:
          service:
            name: experimentservice
            port:
              name: graphql
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: experimentrestapi
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experimentrestapi") | nindent 4 }}
  annotations:
    {{- include "simphera.restApiIngressAnnotations" . | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /api/simphera/experiments
        pathType: Prefix
        backend:
          service:
            name: experimentservice
            port:
              name: rest
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: experimentrestapiswagger
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experimentrestapiswagger") | nindent 4 }}
  annotations:
    {{- include "simphera.swaggerIngressAnnotations" $ | nindent 4 }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /api/simphera/experiments/swagger
        pathType: Prefix
        backend:
          service:
            name: experimentservice
            port:
              name: rest
---
apiVersion: batch/v1
kind: Job
metadata:
  name: experiment-migration-{{ .Release.Revision }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experiment-migration") | nindent 4 }}
  annotations:
    {{- include "simphera.migrationAnnotations" $ | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        {{- include "simphera.jobTemplateLabels" (list . "systemundertest-migration") | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.backendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      containers:
      - name: experiment-migration
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/experiment/datamigrationjob:{{ $datamigrationimagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.migrationContainerResources" . | nindent 8 }}
        {{- include "simphera.job.command" (list . "dotnet" "ExperimentDataMigrationJob.dll") | nindent 8 }}
        env:
        {{- include "simphera.generalEnvironmentVariables" . | nindent 8 }}
        {{- include "simphera.databases.simphera.environmentVariables" . | nindent 8 }}
        {{- include "simphera.storages" . | indent 8 }}
        - name: SCBT_SERVICE_ID
          value: "dSPACE.Simphera.Server.Experiment.DataMigrationJob.{{ $datamigrationimagetag }}"
        {{- range $key, $val := .Values.env.extraEnvVars }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        volumeMounts:
        {{- include "simphera.customRootCertificates.volumeMounts" . | nindent 8 }}
      volumes:
      {{- include "simphera.customRootCertificates.volumes" . | nindent 6 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: experimentmeasurementservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experimentmeasurementservice") | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "simphera.selectorLabels" (list . "experimentmeasurementservice") | nindent 6 }}
  replicas: 0
  template:
    metadata:
      labels:
        {{- include "simphera.templateLabels" (list . "experimentmeasurementservice") | nindent 8 }}
    spec:
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.backendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      containers:
      - name: experimentmeasurementservice
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/experiment/measurementservice:{{ $measurementserviceimagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.dotnetBusinesslogicContainerResources" . | nindent 8 }}
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-service=Readiness", "-addr=0.0.0.0:13371"]
          initialDelaySeconds: 5
          periodSeconds: 15
          failureThreshold: 5
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-service=Liveness", "-addr=0.0.0.0:13371"]
          initialDelaySeconds: 10
          periodSeconds: 15
          failureThreshold: 5
        ports:
        - containerPort: 13370
        - containerPort: 13371
        env:
        {{- include "simphera.generalEnvironmentVariables" . | nindent 8 }}
        {{- include "simphera.databases.simphera.environmentVariables" . | nindent 8 }}
        {{- include "simphera.storages" . | indent 8 }}
        {{- include "simphera.addStorageByName" (dict "context" .Values "storageName" .Values.experiment.storageName ) | indent 8 }}
        {{- include "simphera.customRootCertificates.environmentVariables" . | nindent 8 }}
        - name: SCBT_SERVICE_ID
          value: "dSPACE.Simphera.Server.Experiment.MeasurementService.{{ $measurementserviceimagetag }}"
        {{- range $key, $val := .Values.env.extraEnvVars }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        volumeMounts:
        {{- include "simphera.customRootCertificates.volumeMounts" . | nindent 8 }}
        {{- include "simphera.serviceSettings.volumeMounts" (list . "/usr/app/servicesettings.json") | nindent 8 }}
      volumes:
      {{- include "simphera.customRootCertificates.volumes" . | nindent 6 }}
      {{- include "simphera.serviceSettings.volumes" . | nindent 6 }}
---
apiVersion: v1
kind: Service
metadata:
  name: experimentmeasurementservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experimentmeasurementservice") | nindent 4 }}
spec:
  ports:
  - name: signalr
    port: 13370
    protocol: TCP
    targetPort: 13370
  - name: grpc
    port: 13371
    protocol: TCP
    targetPort: 13371
  selector:
    {{- include "simphera.selectorLabels" (list . "experimentmeasurementservice") | nindent 4 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: experimentmeasurementservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "experimentmeasurementservice") | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: nginx
    ignore-check.kube-linter.io/required-annotation-ingress-auth-url: "This service implements authentication checks itself since the AuthManager (and orginally the OAuth2Proxy) does not work with 'signalr'."
{{- if .Values.global.simphera.ingress.sslRedirect }}
    ingress.kubernetes.io/ssl-redirect: "true"
{{- end }}
    nginx.ingress.kubernetes.io/proxy-body-size: 200m
{{- if .Values.global.simphera.enableCORS }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-request-id"
{{- end }}
{{- range $k, $v := .Values.global.simphera.ingress.additionalAnnotations }}
    {{ $k }}: "{{ $v }}"
{{- end }}
spec:
  {{- include "simphera.ingressTls" . | nindent 2 }}
  rules:
  - host: {{ .Values.global.simphera.hostnames.simphera }}
    http:
      paths:
      - path: /api/experimentmeasurement
        pathType: Prefix
        backend:
          service:
            name: experimentmeasurementservice
            port:
              name: signalr
