{{- $imagetag := default .Values.global.simphera.image.tag .Values.scbtservice.image.tag -}}
{{- $imagetagdatamigration := default .Values.global.simphera.image.tag .Values.scbtservice.datamigrationjob.image.tag -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scbtservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "scbtservice") | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "simphera.selectorLabels" (list . "scbtservice") | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "simphera.templateLabels" (list . "scbtservice") | nindent 8 }}
    spec:
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.backendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      initContainers:
      - name: scbtservice-init
        image: {{ .Values.global.simphera.image.registry }}/dspace/simphera/k8s-wait-for:{{ .Values.global.simphera.image.tag }}
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.initContainerResources" . | nindent 8 }}
        args:
        - "job"
        - "scbt-migration-{{ .Release.Revision }}"
      containers:
      - name: scbtservice
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/scbt/businesslogic:{{ $imagetag }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.dotnetBusinesslogicContainerResources" . | nindent 8 }}
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-service=Readiness", "-addr=0.0.0.0:10000"]
          initialDelaySeconds: 5
          periodSeconds: 15
          failureThreshold: 5
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-service=Liveness", "-addr=0.0.0.0:10000"]
          initialDelaySeconds: 10
          periodSeconds: 15
          failureThreshold: 5
        ports:
        - containerPort: 10000
        env:
        {{- include "simphera.generalEnvironmentVariables" . | nindent 8 }}
        {{- include "simphera.storages" . | indent 8 }}
        {{- include "simphera.addStorageByName" (dict "context" .Values "envPrefix" "RESULT_" "storageName" .Values.resultservice.resultStorageName ) | indent 8 }}
        {{- include "simphera.databases.simphera.environmentVariables" . | nindent 8 }}
        {{- include "simphera.customRootCertificates.environmentVariables" . | nindent 8 }}
        - name: SCBT_SERVICE_ID
          value: "dSPACE.Simphera.ScbTService.{{ $imagetag }}"
        - name: JOB_DEFAULT_EXECUTION_TIMEOUT
          value: {{ .Values.scbtservice.jobDefaultExecutionTimeout | quote }}
        - name: JOB_DEFAULT_PRIORITY
          value: "0"
        - name: WTC_RESULT_EVALUATION_HOOKS
          value: {{ .Values.scbtservice.hooks.evaluate.result | quote }}
        - name: WTC_TESTCASERESULT_EVALUATION_HOOKS
          value: {{ .Values.scbtservice.hooks.evaluate.testcaseresult | quote }}
        - name: WTC_RUN_EVALUATION_HOOKS
          value: {{ .Values.scbtservice.hooks.evaluate.run | quote }}
        {{- range $key, $val := .Values.env.extraEnvVars }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        volumeMounts:
        {{- include "simphera.customRootCertificates.volumeMounts" . | nindent 8 }}
        {{- include "simphera.serviceSettings.volumeMounts" (list . "/usr/app/servicesettings.json") | nindent 8 }}
      volumes:
      {{- include "simphera.customRootCertificates.volumes" . | nindent 6 }}
      {{- include "simphera.serviceSettings.volumes" . | nindent 6 }}
---
apiVersion: v1
kind: Service
metadata:
  name: scbtservice
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "scbtservice") | nindent 4 }}
spec:
  ports:
  - name: grpc
    port: 10000
    protocol: TCP
    targetPort: 10000
  selector:
    {{- include "simphera.selectorLabels" (list . "scbtservice") | nindent 4 }}
---
apiVersion: batch/v1 # Migration Job
kind: Job
metadata:
  name: scbt-migration-{{ .Release.Revision }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "simphera.resourceLabels" (list . "scbt-migration") | nindent 4 }}
  annotations:
    {{- include "simphera.migrationAnnotations" $ | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        {{- include "simphera.jobTemplateLabels" (list . "scbt-migration") | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- include "simphera.generalPodProperties" . | nindent 6 }}
      {{- include "simphera.backendPodSecurityContextAndServiceAccount" . | nindent 6 }}
      restartPolicy: Never
      initContainers:
      - name: resultservice-init
        image: {{ .Values.global.simphera.image.registry }}/dspace/simphera/k8s-wait-for:{{ .Values.global.simphera.image.tag }}
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.initContainerResources" . | nindent 8 }}
        args:
        - "job"
        - "result-migration-{{ .Release.Revision }}"
      containers:
      - name: scbt-migration
        image: "{{ .Values.global.simphera.image.registry }}/dspace/simphera/scbt/datamigrationjob:{{ $imagetagdatamigration }}"
        imagePullPolicy: {{ .Values.global.simphera.image.pullPolicy }}
        {{- include "simphera.containerSecurityContext" . | nindent 8 }}
        {{- include "simphera.migrationContainerResources" . | nindent 8 }}
        {{- include "simphera.job.command" (list . "dotnet" "ScbtDataMigrationJob.dll") | nindent 8 }}
        env:
        {{- include "simphera.generalEnvironmentVariables" . | nindent 8 }}
        {{- include "simphera.storages" . | indent 8 }}
        {{- include "simphera.databases.simphera.environmentVariables" . | nindent 8 }}
        - name: SCBT_SERVICE_ID
          value: "dSPACE.Simphera.ScbTService.{{ $imagetagdatamigration }}"
        - name: DIFFERENT_DATABASE
          value: {{ .Values.global.simphera.databases.simpheraScbtResults.enabled | quote }}
        {{- range $key, $val := .Values.env.extraEnvVars }}
        - name: {{ $key }}
          value: "{{ $val }}"
        {{- end }}
        volumeMounts:
        {{- include "simphera.customRootCertificates.volumeMounts" . | nindent 8 }}
      volumes:
      {{- include "simphera.customRootCertificates.volumes" . | nindent 6 }}
